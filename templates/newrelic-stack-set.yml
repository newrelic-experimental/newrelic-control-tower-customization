AWSTemplateFormatVersion: 2010-09-09
Description: Adds in New Relic integration to your aws accounts. Launch as Stack Set in your Control Tower landing zone master account.
Parameters:
  NewRelicAccountNumber:
    Type: String
    Description: Your Newrelic account number
    AllowedPattern: '[0-9]+'
  PolicyName: 
    Type: String
    Default: NewRelicLambdaIntegrationRole
    Description: 'Policy name of the policy to use in the Role. If no value is supplied it will use the AWS default ReadOnlyAccess.
    The default AWS ReadOnlyAccess policy is managed by AWS and automatically gains new permissions as new services are introduced but
    includes a broad set of permissions which are not required by NewRelic integrations.
    If a value is supplied a custom policy will be created with the provided name. This custom policy only includes the minimum 
    required permissions to allow NewRelic to monitor your Lambda functions. Take into account that this policy is not automatically 
    updated by AWS, and must be managed by you.'
  PolicyRegion: 
    Type: 'String'
    AllowedValues:
      - us-east-2
      - us-east-1
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ca-central-1
      - cn-north-1
      - cn-northwest-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-north-1
      - me-south-1
      - sa-east-1
    Description: 'Region (in target accounts) where IAM Role and Managed Policy will be deployed. 
    Recommended to keep it same as your HOME region.'

Conditions: 
  CreatePolicy: !Equals [!Ref "AWS::Region", !Ref PolicyRegion]
  UseCustomPolicy: !And [!Not [!Equals [ !Ref PolicyName, '']], Condition: CreatePolicy]
  UseDefaultPolicy: !And [!Equals [ !Ref PolicyName, ''], Condition: CreatePolicy]
  
Resources:
  NewRelicDefaultPolicyLambdaRole:
    Type: 'AWS::IAM::Role'
    Condition: UseDefaultPolicy
    Properties:
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      RoleName: !Join ['_', ['NewRelicLambdaIntegrationRole', !Ref NewRelicAccountNumber]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: 'arn:aws:iam::754728514883:root'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref NewRelicAccountNumber

  NewRelicCustomPolicyLambdaRole:
    Type: 'AWS::IAM::Role'
    Condition: UseCustomPolicy
    Properties:
      RoleName: !Join ['_', ['NewRelicLambdaIntegrationRole', !Ref NewRelicAccountNumber]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: 'arn:aws:iam::754728514883:root'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref NewRelicAccountNumber

  NewRelicLambdaCustomPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: UseCustomPolicy
    Properties:    
      ManagedPolicyName: !Ref PolicyName
      Roles:
        - !Ref NewRelicCustomPolicyLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              - 'elasticloadbalancing:DescribeLoadBalancers'
              - 'elasticloadbalancing:DescribeTargetGroups'
              - 'elasticloadbalancing:DescribeTags'
              - 'elasticloadbalancing:DescribeLoadBalancerAttributes'
              - 'elasticloadbalancing:DescribeListeners'
              - 'elasticloadbalancing:DescribeRules'
              - 'elasticloadbalancing:DescribeTargetGroupAttributes'
              - 'elasticloadbalancing:DescribeInstanceHealth'
              - 'elasticloadbalancing:DescribeLoadBalancerPolicies'
              - 'elasticloadbalancing:DescribeLoadBalancerPolicyTypes'
              - 'apigateway:GET'
              - 'apigateway:HEAD'
              - 'apigateway:OPTIONS'
              - 'autoscaling:DescribeLaunchConfigurations'
              - 'autoscaling:DescribeAutoScalingGroups'
              - 'autoscaling:DescribePolicies'
              - 'autoscaling:DescribeTags'
              - 'autoscaling:DescribeAccountLimits'
              - 'budgets:ViewBilling'
              - 'budgets:ViewBudget'
              - 'cloudfront:ListDistributions'
              - 'cloudfront:ListStreamingDistributions'
              - 'cloudfront:ListTagsForResource'
              - 'cloudtrail:LookupEvents'
              - 'dynamodb:DescribeLimits'
              - 'dynamodb:ListTables'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ListGlobalTables'
              - 'dynamodb:DescribeGlobalTable'
              - 'dynamodb:ListTagsOfResource'
              - 'ec2:DescribeVolumeStatus'
              - 'ec2:DescribeVolumes'
              - 'ec2:DescribeVolumeAttribute'
              - 'ec2:DescribeInstanceStatus'
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeVpnConnections'
              - 'ecs:ListServices'
              - 'ecs:DescribeServices'
              - 'ecs:DescribeClusters'
              - 'ecs:ListClusters'
              - 'ecs:ListTagsForResource'
              - 'elasticfilesystem:DescribeMountTargets'
              - 'elasticfilesystem:DescribeFileSystems'
              - 'elasticache:DescribeCacheClusters'
              - 'elasticache:ListTagsForResource'
              - 'es:ListDomainNames'
              - 'es:DescribeElasticsearchDomain'
              - 'es:DescribeElasticsearchDomains'
              - 'es:ListTags'
              - 'elasticbeanstalk:DescribeEnvironments'
              - 'elasticbeanstalk:DescribeInstancesHealth'
              - 'elasticbeanstalk:DescribeConfigurationSettings'
              - 'elasticloadbalancing:DescribeLoadBalancers'
              - 'elasticmapreduce:ListInstances'
              - 'elasticmapreduce:ListClusters'
              - 'elasticmapreduce:DescribeCluster'
              - 'elasticmapreduce:ListInstanceGroups'
              - 'health:DescribeAffectedEntities'
              - 'health:DescribeEventDetails'
              - 'health:DescribeEvents'
              - 'iam:ListSAMLProviders'
              - 'iam:ListOpenIDConnectProviders'
              - 'iam:ListServerCertificates'
              - 'iam:GetAccountAuthorizationDetails'
              - 'iam:ListVirtualMFADevices'
              - 'iam:GetAccountSummary'
              - 'iot:ListTopicRules'
              - 'iot:GetTopicRule'
              - 'iot:ListThings'
              - 'firehose:DescribeDeliveryStream'
              - 'firehose:ListDeliveryStreams'
              - 'kinesis:ListStreams'
              - 'kinesis:DescribeStream'
              - 'kinesis:ListTagsForStream'
              - 'rds:ListTagsForResource'
              - 'rds:DescribeDBInstances'
              - 'rds:DescribeDBClusters'
              - 'route53:ListHealthChecks'
              - 'route53:GetHostedZone'
              - 'route53:ListHostedZones'
              - 'route53:ListResourceRecordSets'
              - 'route53:ListTagsForResources'
              - 's3:GetLifecycleConfiguration'
              - 's3:GetBucketTagging'
              - 's3:ListAllMyBuckets'
              - 's3:GetBucketWebsite'
              - 's3:GetBucketLogging'
              - 's3:GetBucketCORS'
              - 's3:GetBucketVersioning'
              - 's3:GetBucketAcl'
              - 's3:GetBucketNotification'
              - 's3:GetBucketPolicy'
              - 's3:GetReplicationConfiguration'
              - 's3:GetMetricsConfiguration'
              - 's3:GetAccelerateConfiguration'
              - 's3:GetAnalyticsConfiguration'
              - 's3:GetBucketLocation'
              - 's3:GetBucketRequestPayment'
              - 's3:GetEncryptionConfiguration'
              - 's3:GetInventoryConfiguration'
              - 's3:GetIpConfiguration'
              - 'ses:ListConfigurationSet'
              - 'ses:GetSendQuota'
              - 'ses:DescribeConfigurationSet'
              - 'ses:ListReceiptFilters'
              - 'ses:ListReceiptRuleSets'
              - 'ses:DescribeReceiptRule'
              - 'ses:DescribeReceiptRuleSet'
              - 'sns:GetTopicAttributes'
              - 'sns:ListTopics'
              - 'sqs:ListQueues'
              - 'sqs:ListQueueTags'
              - 'sqs:GetQueueAttributes'
              - 'tag:GetResources'
              - 'ec2:DescribeInternetGateways'
              - 'ec2:DescribeVpcs'
              - 'ec2:DescribeNatGateways'
              - 'ec2:DescribeVpcEndpoints'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeNetworkAcls'
              - 'ec2:DescribeVpcAttribute'
              - 'ec2:DescribeRouteTables'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeVpcPeeringConnections'
              - 'ec2:DescribeNetworkInterfaces'
              - 'lambda:GetAccountSettings'
              - 'lambda:ListFunctions'
              - 'lambda:ListAliases'
              - 'lambda:ListTags'
              - 'lambda:ListEventSourceMappings'
              - 'cloudwatch:GetMetricStatistics'
              - 'cloudwatch:ListMetrics'
              - 'cloudwatch:GetMetricData'
              - 'support:*'
            Resource: '*'